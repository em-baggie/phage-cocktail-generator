To make an iterator
into_iter() - gets iterator of elements of type T by taking ownership
.iter() - gets iterator of elements of type &T by borrowing
.iter_mut() - gets iterator of elements of type &mut T by borrowing

Common iterator adapters
.map() - applies a function to each element of the iterator and returns a new iterator with the results

.filter() - filters elements of the iterator based on a predicate and returns a new iterator with the results

.take() - takes the first n elements from the iterator and returns a new iterator with the results

.collect() - collects the elements of the iterator into a collection such as a vector, array, or hash map

.fold() - applies a function to each element of the iterator and returns a single value

.any() - returns true if any element of the iterator satisfies a predicate

.all() - returns true if all elements of the iterator satisfy a predicate

.get() - gets the element at the given index

.count() - counts the number of elements in the iterator

.max() - finds the maximum element of the iterator

Matrix: {(0, 5): true, (6, 1): false, (2, 5): true, (5, 8): true, (6, 3): false, (6, 5): false, (5, 4): false, (0, 4): true, (1, 3): false, (4, 1): false, (6, 4): false, (4, 7): false, (4, 8): true, (2, 6): false, (0, 3): false, (5, 0): false, (3, 6): false, (3, 8): true, (4, 2): false, (0, 2): false, (2, 0): false, (6, 0): false, (5, 2): false, (0, 9): false, (2, 1): false, (1, 5): true, (3, 5): true, (0, 6): false, (5, 5): false, (3, 4): true, (4, 4): false, (1, 2): false, (3, 7): false, (1, 0): false, (5, 1): false, (6, 9): false, (3, 3): false, (2, 8): true, (3, 2): false, (5, 6): false, (3, 1): false, (5, 3): false, (6, 2): false, (1, 9): false, (4, 9): false, (1, 8): true, (1, 6): false, (0, 7): false, (4, 3): false, (1, 4): true, (6, 8): true, (4, 0): false, (2, 3): false, (4, 5): false, (0, 0): false, (5, 9): false, (3, 0): false, (6, 7): false, (2, 7): false, (5, 7): false, (1, 1): false, (3, 9): false, (0, 1): false, (2, 9): false, (4, 6): false, (6, 6): false, (2, 2): false, (2, 4): true, (1, 7): false, (0, 8): true}