To make an iterator
into_iter() - gets iterator of elements of type T by taking ownership
.iter() - gets iterator of elements of type &T by borrowing
.iter_mut() - gets iterator of elements of type &mut T by borrowing

Common iterator adapters
.map() - applies a function to each element of the iterator and returns a new iterator with the results

.filter() - filters elements of the iterator based on a predicate and returns a new iterator with the results

.take() - takes the first n elements from the iterator and returns a new iterator with the results

.collect() - collects the elements of the iterator into a collection such as a vector, array, or hash map

.fold() - applies a function to each element of the iterator and returns a single value

.any() - returns true if any element of the iterator satisfies a predicate

.all() - returns true if all elements of the iterator satisfy a predicate

.get() - gets the element at the given index

.count() - counts the number of elements in the iterator

.max() - finds the maximum element of the iterator